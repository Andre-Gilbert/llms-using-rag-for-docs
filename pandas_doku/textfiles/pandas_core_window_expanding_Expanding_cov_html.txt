

pandas.core.window.expanding.Expanding.cov#


Expanding.cov(other=None, pairwise=None, ddof=1, numeric_only=False)[source]#
Calculate the expanding sample covariance.

Parameters:

otherSeries or DataFrame, optionalIf not supplied then will default to self and produce pairwise
output.

pairwisebool, default NoneIf False then only matching columns between self and other will be
used and the output will be a DataFrame.
If True then all pairwise combinations will be calculated and the
output will be a MultiIndexed DataFrame in the case of DataFrame
inputs. In the case of missing elements, only complete pairwise
observations will be used.

ddofint, default 1Delta Degrees of Freedom. The divisor used in calculations
is N - ddof, where N represents the number of elements.

numeric_onlybool, default FalseInclude only float, int, boolean columns.

New in version 1.5.0.




Returns:

Series or DataFrameReturn type is the same as the original object with np.float64 dtype.





See also

pandas.Series.expandingCalling expanding with Series data.

pandas.DataFrame.expandingCalling expanding with DataFrames.

pandas.Series.covAggregating cov for Series.

pandas.DataFrame.covAggregating cov for DataFrame.



Examples
>>> ser1 = pd.Series([1, 2, 3, 4], index=['a', 'b', 'c', 'd'])
>>> ser2 = pd.Series([10, 11, 13, 16], index=['a', 'b', 'c', 'd'])
>>> ser1.expanding().cov(ser2)
a         NaN
b    0.500000
c    1.500000
d    3.333333
dtype: float64




