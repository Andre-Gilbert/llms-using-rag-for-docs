

pandas.testing.assert_frame_equal#


pandas.testing.assert_frame_equal(left, right, check_dtype=True, check_index_type='equiv', check_column_type='equiv', check_frame_type=True, check_names=True, by_blocks=False, check_exact=False, check_datetimelike_compat=False, check_categorical=True, check_like=False, check_freq=True, check_flags=True, rtol=1e-05, atol=1e-08, obj='DataFrame')[source]#
Check that left and right DataFrame are equal.
This function is intended to compare two DataFrames and output any
differences. It is mostly intended for use in unit tests.
Additional parameters allow varying the strictness of the
equality checks performed.

Parameters:

leftDataFrameFirst DataFrame to compare.

rightDataFrameSecond DataFrame to compare.

check_dtypebool, default TrueWhether to check the DataFrame dtype is identical.

check_index_typebool or {âequivâ}, default âequivâWhether to check the Index class, dtype and inferred_type
are identical.

check_column_typebool or {âequivâ}, default âequivâWhether to check the columns class, dtype and inferred_type
are identical. Is passed as the exact argument of
assert_index_equal().

check_frame_typebool, default TrueWhether to check the DataFrame class is identical.

check_namesbool, default TrueWhether to check that the names attribute for both the index
and column attributes of the DataFrame is identical.

by_blocksbool, default FalseSpecify how to compare internal data. If False, compare by columns.
If True, compare by blocks.

check_exactbool, default FalseWhether to compare number exactly.

check_datetimelike_compatbool, default FalseCompare datetime-like which is comparable ignoring dtype.

check_categoricalbool, default TrueWhether to compare internal Categorical exactly.

check_likebool, default FalseIf True, ignore the order of index & columns.
Note: index labels must match their respective rows
(same as in columns) - same labels must be with the same data.

check_freqbool, default TrueWhether to check the freq attribute on a DatetimeIndex or TimedeltaIndex.

check_flagsbool, default TrueWhether to check the flags attribute.

rtolfloat, default 1e-5Relative tolerance. Only used when check_exact is False.

atolfloat, default 1e-8Absolute tolerance. Only used when check_exact is False.

objstr, default âDataFrameâSpecify object name being compared, internally used to show appropriate
assertion message.





See also

assert_series_equalEquivalent method for asserting Series equality.

DataFrame.equalsCheck DataFrame equality.



Examples
This example shows comparing two DataFrames that are equal
but with columns of differing dtypes.
>>> from pandas.testing import assert_frame_equal
>>> df1 = pd.DataFrame({'a': [1, 2], 'b': [3, 4]})
>>> df2 = pd.DataFrame({'a': [1, 2], 'b': [3.0, 4.0]})


df1 equals itself.
>>> assert_frame_equal(df1, df1)


df1 differs from df2 as column âbâ is of a different type.
>>> assert_frame_equal(df1, df2)
Traceback (most recent call last):
...
AssertionError: Attributes of DataFrame.iloc[:, 1] (column name="b") are different


Attribute âdtypeâ are different
[left]: int64
[right]: float64
Ignore differing dtypes in columns with check_dtype.
>>> assert_frame_equal(df1, df2, check_dtype=False)




