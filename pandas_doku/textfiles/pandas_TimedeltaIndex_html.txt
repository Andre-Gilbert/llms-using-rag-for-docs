

pandas.TimedeltaIndex#


class pandas.TimedeltaIndex(data=None, unit=None, freq=_NoDefault.no_default, closed=_NoDefault.no_default, dtype=None, copy=False, name=None)[source]#
Immutable Index of timedelta64 data.
Represented internally as int64, and scalars returned Timedelta objects.

Parameters:

dataarray-like (1-dimensional), optionalOptional timedelta-like data to construct index with.

unit{âDâ, âhâ, âmâ, âsâ, âmsâ, âusâ, ânsâ}, optionalThe unit of data.

freqstr or pandas offset object, optionalOne of pandas date offset strings or corresponding objects. The string
'infer' can be passed in order to set the frequency of the index as
the inferred frequency upon creation.

dtypenumpy.dtype or str, default NoneValid numpy dtypes are timedelta64[ns], timedelta64[us],
timedelta64[ms], and timedelta64[s].

copyboolMake a copy of input array.

nameobjectName to be stored in the index.





See also

IndexThe base pandas Index type.

TimedeltaRepresents a duration between two dates or times.

DatetimeIndexIndex of datetime64 data.

PeriodIndexIndex of Period data.

timedelta_rangeCreate a fixed-frequency TimedeltaIndex.



Notes
To learn more about the frequency strings, please see this link.
Examples
>>> pd.TimedeltaIndex(['0 days', '1 days', '2 days', '3 days', '4 days'])
TimedeltaIndex(['0 days', '1 days', '2 days', '3 days', '4 days'],
               dtype='timedelta64[ns]', freq=None)


>>> pd.TimedeltaIndex([1, 2, 4, 8], unit='D')
TimedeltaIndex(['1 days', '2 days', '4 days', '8 days'],
               dtype='timedelta64[ns]', freq=None)


We can also let pandas infer the frequency when possible.
>>> pd.TimedeltaIndex(range(5), unit='D', freq='infer')
TimedeltaIndex(['0 days', '1 days', '2 days', '3 days', '4 days'],
               dtype='timedelta64[ns]', freq='D')


Attributes


days
Number of days for each element.

seconds
Number of seconds (>= 0 and less than 1 day) for each element.

microseconds
Number of microseconds (>= 0 and less than 1 second) for each element.

nanoseconds
Number of nanoseconds (>= 0 and less than 1 microsecond) for each element.

components
Return a DataFrame of the individual resolution components of the Timedeltas.

inferred_freq
Tries to return a string representing a frequency generated by infer_freq.



Methods


to_pytimedelta(*args,Â **kwargs)
Return an ndarray of datetime.timedelta objects.

to_series([index,Â name])
Create a Series with both index and values equal to the index keys.

round(*args,Â **kwargs)
Perform round operation on the data to the specified freq.

floor(*args,Â **kwargs)
Perform floor operation on the data to the specified freq.

ceil(*args,Â **kwargs)
Perform ceil operation on the data to the specified freq.

to_frame([index,Â name])
Create a DataFrame with a column containing the Index.

mean(*[,Â skipna,Â axis])
Return the mean value of the Array.





