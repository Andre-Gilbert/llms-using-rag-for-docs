

pandas.errors.AbstractMethodError#


exception pandas.errors.AbstractMethodError(class_instance, methodtype='method')[source]#
Raise this error instead of NotImplementedError for abstract methods.
Examples
>>> class Foo:
...     @classmethod
...     def classmethod(cls):
...         raise pd.errors.AbstractMethodError(cls, methodtype="classmethod")
...     def method(self):
...         raise pd.errors.AbstractMethodError(self)
>>> test = Foo.classmethod()
Traceback (most recent call last):
AbstractMethodError: This classmethod must be defined in the concrete class Foo


>>> test2 = Foo().method()
Traceback (most recent call last):
AbstractMethodError: This classmethod must be defined in the concrete class Foo




