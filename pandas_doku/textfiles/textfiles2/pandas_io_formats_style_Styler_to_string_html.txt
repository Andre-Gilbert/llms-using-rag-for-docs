

pandas.io.formats.style.Styler.to_string#


Styler.to_string(buf=None, *, encoding=None, sparse_index=None, sparse_columns=None, max_rows=None, max_columns=None, delimiter=' ')[source]#
Write Styler to a file, buffer or string in text format.

New in version 1.5.0.


Parameters:

bufstr, path object, file-like object, optionalString, path object (implementing os.PathLike[str]), or file-like
object implementing a string write() function. If None, the result is
returned as a string.

encodingstr, optionalCharacter encoding setting for file output (and meta tags if available).
Defaults to pandas.options.styler.render.encoding value of âutf-8â.

sparse_indexbool, optionalWhether to sparsify the display of a hierarchical index. Setting to False
will display each explicit level element in a hierarchical key for each row.
Defaults to pandas.options.styler.sparse.index value.

sparse_columnsbool, optionalWhether to sparsify the display of a hierarchical index. Setting to False
will display each explicit level element in a hierarchical key for each
column. Defaults to pandas.options.styler.sparse.columns value.

max_rowsint, optionalThe maximum number of rows that will be rendered. Defaults to
pandas.options.styler.render.max_rows, which is None.

max_columnsint, optionalThe maximum number of columns that will be rendered. Defaults to
pandas.options.styler.render.max_columns, which is None.
Rows and columns may be reduced if the number of total elements is
large. This value is set to pandas.options.styler.render.max_elements,
which is 262144 (18 bit browser rendering).

delimiterstr, default single spaceThe separator between data elements.



Returns:

str or NoneIf buf is None, returns the result as a string. Otherwise returns None.




Examples
>>> df = pd.DataFrame({'A': [1, 2], 'B': [3, 4]})
>>> df.style.to_string()
' A B\n0 1 3\n1 2 4\n'




