

pandas.core.groupby.DataFrameGroupBy.cummin#


DataFrameGroupBy.cummin(axis=_NoDefault.no_default, numeric_only=False, **kwargs)[source]#
Cumulative min for each group.

Returns:

Series or DataFrame




See also

Series.groupbyApply a function groupby to a Series.

DataFrame.groupbyApply a function groupby to each row or column of a DataFrame.



Examples
For SeriesGroupBy:
>>> lst = ['a', 'a', 'a', 'b', 'b', 'b']
>>> ser = pd.Series([1, 6, 2, 3, 0, 4], index=lst)
>>> ser
a    1
a    6
a    2
b    3
b    0
b    4
dtype: int64
>>> ser.groupby(level=0).cummin()
a    1
a    1
a    1
b    3
b    0
b    0
dtype: int64


For DataFrameGroupBy:
>>> data = [[1, 0, 2], [1, 1, 5], [6, 6, 9]]
>>> df = pd.DataFrame(data, columns=["a", "b", "c"],
...                   index=["snake", "rabbit", "turtle"])
>>> df
        a   b   c
snake   1   0   2
rabbit  1   1   5
turtle  6   6   9
>>> df.groupby("a").groups
{1: ['snake', 'rabbit'], 6: ['turtle']}
>>> df.groupby("a").cummin()
        b   c
snake   0   2
rabbit  0   2
turtle  6   9




