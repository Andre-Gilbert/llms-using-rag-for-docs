

pandas.DataFrame.to_stata#


DataFrame.to_stata(path, *, convert_dates=None, write_index=True, byteorder=None, time_stamp=None, data_label=None, variable_labels=None, version=114, convert_strl=None, compression='infer', storage_options=None, value_labels=None)[source]#
Export DataFrame object to Stata dta format.
Writes the DataFrame to a Stata dataset file.
âdtaâ files contain a Stata dataset.

Parameters:

pathstr, path object, or bufferString, path object (implementing os.PathLike[str]), or file-like
object implementing a binary write() function.

convert_datesdictDictionary mapping columns containing datetime types to stata
internal format to use when writing the dates. Options are âtcâ,
âtdâ, âtmâ, âtwâ, âthâ, âtqâ, âtyâ. Column can be either an integer
or a name. Datetime columns that do not have a conversion type
specified will be converted to âtcâ. Raises NotImplementedError if
a datetime column has timezone information.

write_indexboolWrite the index to Stata dataset.

byteorderstrCan be â>â, â<â, âlittleâ, or âbigâ. default is sys.byteorder.

time_stampdatetimeA datetime to use as file creation date. Default is the current
time.

data_labelstr, optionalA label for the data set. Must be 80 characters or smaller.

variable_labelsdictDictionary containing columns as keys and variable labels as
values. Each label must be 80 characters or smaller.

version{114, 117, 118, 119, None}, default 114Version to use in the output dta file. Set to None to let pandas
decide between 118 or 119 formats depending on the number of
columns in the frame. Version 114 can be read by Stata 10 and
later. Version 117 can be read by Stata 13 or later. Version 118
is supported in Stata 14 and later. Version 119 is supported in
Stata 15 and later. Version 114 limits string variables to 244
characters or fewer while versions 117 and later allow strings
with lengths up to 2,000,000 characters. Versions 118 and 119
support Unicode characters, and version 119 supports more than
32,767 variables.
Version 119 should usually only be used when the number of
variables exceeds the capacity of dta format 118. Exporting
smaller datasets in format 119 may have unintended consequences,
and, as of November 2020, Stata SE cannot read version 119 files.

convert_strllist, optionalList of column names to convert to string columns to Stata StrL
format. Only available if version is 117. Storing strings in the
StrL format can produce smaller dta files if strings have more than
8 characters and values are repeated.

compressionstr or dict, default âinferâFor on-the-fly compression of the output data. If âinferâ and âpathâ is
path-like, then detect compression from the following extensions: â.gzâ,
â.bz2â, â.zipâ, â.xzâ, â.zstâ, â.tarâ, â.tar.gzâ, â.tar.xzâ or â.tar.bz2â
(otherwise no compression).
Set to None for no compression.
Can also be a dict with key 'method' set
to one of {'zip', 'gzip', 'bz2', 'zstd', 'xz', 'tar'} and
other key-value pairs are forwarded to
zipfile.ZipFile, gzip.GzipFile,
bz2.BZ2File, zstandard.ZstdCompressor, lzma.LZMAFile or
tarfile.TarFile, respectively.
As an example, the following could be passed for faster compression and to create
a reproducible gzip archive:
compression={'method': 'gzip', 'compresslevel': 1, 'mtime': 1}.

New in version 1.5.0: Added support for .tar files.


Changed in version 1.4.0: Zstandard support.


storage_optionsdict, optionalExtra options that make sense for a particular storage connection, e.g.
host, port, username, password, etc. For HTTP(S) URLs the key-value pairs
are forwarded to urllib.request.Request as header options. For other
URLs (e.g. starting with âs3://â, and âgcs://â) the key-value pairs are
forwarded to fsspec.open. Please see fsspec and urllib for more
details, and for more examples on storage options refer here.

New in version 1.2.0.


value_labelsdict of dictsDictionary containing columns as keys and dictionaries of column value
to labels as values. Labels for a single variable must be 32,000
characters or smaller.

New in version 1.4.0.




Raises:

NotImplementedError
If datetimes contain timezone information
Column dtype is not representable in Stata


ValueError
Columns listed in convert_dates are neither datetime64[ns]
or datetime.datetime
Column listed in convert_dates is not in DataFrame
Categorical label contains more than 32,000 characters






See also

read_stataImport Stata data files.

io.stata.StataWriterLow-level writer for Stata data files.

io.stata.StataWriter117Low-level writer for version 117 files.



Examples
>>> df = pd.DataFrame({'animal': ['falcon', 'parrot', 'falcon',
...                               'parrot'],
...                    'speed': [350, 18, 361, 15]})
>>> df.to_stata('animals.dta')  




