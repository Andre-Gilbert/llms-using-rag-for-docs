

pandas.Series.hist#


Series.hist(by=None, ax=None, grid=True, xlabelsize=None, xrot=None, ylabelsize=None, yrot=None, figsize=None, bins=10, backend=None, legend=False, **kwargs)[source]#
Draw histogram of the input series using matplotlib.

Parameters:

byobject, optionalIf passed, then used to form histograms for separate groups.

axmatplotlib axis objectIf not passed, uses gca().

gridbool, default TrueWhether to show axis grid lines.

xlabelsizeint, default NoneIf specified changes the x-axis label size.

xrotfloat, default NoneRotation of x axis labels.

ylabelsizeint, default NoneIf specified changes the y-axis label size.

yrotfloat, default NoneRotation of y axis labels.

figsizetuple, default NoneFigure size in inches by default.

binsint or sequence, default 10Number of histogram bins to be used. If an integer is given, bins + 1
bin edges are calculated and returned. If bins is a sequence, gives
bin edges, including left edge of first bin and right edge of last
bin. In this case, bins is returned unmodified.

backendstr, default NoneBackend to use instead of the backend specified in the option
plotting.backend. For instance, âmatplotlibâ. Alternatively, to
specify the plotting.backend for the whole session, set
pd.options.plotting.backend.

legendbool, default FalseWhether to show the legend.

**kwargsTo be passed to the actual plotting function.



Returns:

matplotlib.AxesSubplotA histogram plot.





See also

matplotlib.axes.Axes.histPlot a histogram using matplotlib.



Examples
For Series:
>>> lst = ['a', 'a', 'a', 'b', 'b', 'b']
>>> ser = pd.Series([1, 2, 2, 4, 6, 6], index=lst)
>>> hist = ser.hist()





For Groupby:
>>> lst = ['a', 'a', 'a', 'b', 'b', 'b']
>>> ser = pd.Series([1, 2, 2, 4, 6, 6], index=lst)
>>> hist = ser.groupby(level=0).hist()







