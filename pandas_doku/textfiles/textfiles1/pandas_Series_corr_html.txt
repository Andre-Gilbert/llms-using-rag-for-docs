

pandas.Series.corr#


Series.corr(other, method='pearson', min_periods=None)[source]#
Compute correlation with other Series, excluding missing values.
The two Series objects are not required to be the same length and will be
aligned internally before the correlation function is applied.

Parameters:

otherSeriesSeries with which to compute the correlation.

method{âpearsonâ, âkendallâ, âspearmanâ} or callableMethod used to compute correlation:

pearson : Standard correlation coefficient
kendall : Kendall Tau correlation coefficient
spearman : Spearman rank correlation
callable: Callable with input two 1d ndarrays and returning a float.


Warning
Note that the returned matrix from corr will have 1 along the
diagonals and will be symmetric regardless of the callableâs
behavior.


min_periodsint, optionalMinimum number of observations needed to have a valid result.



Returns:

floatCorrelation with other.





See also

DataFrame.corrCompute pairwise correlation between columns.

DataFrame.corrwithCompute pairwise correlation with another DataFrame or Series.



Notes
Pearson, Kendall and Spearman correlation are currently computed using pairwise complete observations.

Pearson correlation coefficient
Kendall rank correlation coefficient
Spearmanâs rank correlation coefficient

Automatic data alignment: as with all pandas operations, automatic data alignment is performed for this method.
corr() automatically considers values with matching indices.
Examples
>>> def histogram_intersection(a, b):
...     v = np.minimum(a, b).sum().round(decimals=1)
...     return v
>>> s1 = pd.Series([.2, .0, .6, .2])
>>> s2 = pd.Series([.3, .6, .0, .1])
>>> s1.corr(s2, method=histogram_intersection)
0.3


Pandas auto-aligns the values with matching indices
>>> s1 = pd.Series([1, 2, 3], index=[0, 1, 2])
>>> s2 = pd.Series([1, 2, 3], index=[2, 1, 0])
>>> s1.corr(s2)
-1.0




