

pandas.timedelta_range#


pandas.timedelta_range(start=None, end=None, periods=None, freq=None, name=None, closed=None, *, unit=None)[source]#
Return a fixed frequency TimedeltaIndex with day as the default.

Parameters:

startstr or timedelta-like, default NoneLeft bound for generating timedeltas.

endstr or timedelta-like, default NoneRight bound for generating timedeltas.

periodsint, default NoneNumber of periods to generate.

freqstr, Timedelta, datetime.timedelta, or DateOffset, default âDâFrequency strings can have multiples, e.g. â5Hâ.

namestr, default NoneName of the resulting TimedeltaIndex.

closedstr, default NoneMake the interval closed with respect to the given frequency to
the âleftâ, ârightâ, or both sides (None).

unitstr, default NoneSpecify the desired resolution of the result.

New in version 2.0.0.




Returns:

TimedeltaIndex



Notes
Of the four parameters start, end, periods, and freq,
exactly three must be specified. If freq is omitted, the resulting
TimedeltaIndex will have periods linearly spaced elements between
start and end (closed on both sides).
To learn more about the frequency strings, please see this link.
Examples
>>> pd.timedelta_range(start='1 day', periods=4)
TimedeltaIndex(['1 days', '2 days', '3 days', '4 days'],
               dtype='timedelta64[ns]', freq='D')


The closed parameter specifies which endpoint is included. The default
behavior is to include both endpoints.
>>> pd.timedelta_range(start='1 day', periods=4, closed='right')
TimedeltaIndex(['2 days', '3 days', '4 days'],
               dtype='timedelta64[ns]', freq='D')


The freq parameter specifies the frequency of the TimedeltaIndex.
Only fixed frequencies can be passed, non-fixed frequencies such as
âMâ (month end) will raise.
>>> pd.timedelta_range(start='1 day', end='2 days', freq='6H')
TimedeltaIndex(['1 days 00:00:00', '1 days 06:00:00', '1 days 12:00:00',
                '1 days 18:00:00', '2 days 00:00:00'],
               dtype='timedelta64[ns]', freq='6H')


Specify start, end, and periods; the frequency is generated
automatically (linearly spaced).
>>> pd.timedelta_range(start='1 day', end='5 days', periods=4)
TimedeltaIndex(['1 days 00:00:00', '2 days 08:00:00', '3 days 16:00:00',
                '5 days 00:00:00'],
               dtype='timedelta64[ns]', freq=None)


Specify a unit
>>> pd.timedelta_range("1 Day", periods=3, freq="100000D", unit="s")
TimedeltaIndex(['1 days 00:00:00', '100001 days 00:00:00',
                '200001 days 00:00:00'],
               dtype='timedelta64[s]', freq='100000D')




