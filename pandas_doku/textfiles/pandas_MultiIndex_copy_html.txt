

pandas.MultiIndex.copy#


MultiIndex.copy(names=None, deep=False, name=None)[source]#
Make a copy of this object.
Names, dtype, levels and codes can be passed and will be set on new copy.

Parameters:

namessequence, optional
deepbool, default False
nameLabelKept for compatibility with 1-dimensional Index. Should not be used.



Returns:

MultiIndex



Notes
In most cases, there should be no functional difference from using
deep, but if deep is passed it will attempt to deepcopy.
This could be potentially expensive on large MultiIndex objects.
Examples
>>> mi = pd.MultiIndex.from_arrays([['a'], ['b'], ['c']])
>>> mi
MultiIndex([('a', 'b', 'c')],
           )
>>> mi.copy()
MultiIndex([('a', 'b', 'c')],
           )




