

pandas.Series.sem#


Series.sem(axis=None, skipna=True, ddof=1, numeric_only=False, **kwargs)[source]#
Return unbiased standard error of the mean over requested axis.
Normalized by N-1 by default. This can be changed using the ddof argument

Parameters:

axis{index (0)}For Series this parameter is unused and defaults to 0.

skipnabool, default TrueExclude NA/null values. If an entire row/column is NA, the result
will be NA.

ddofint, default 1Delta Degrees of Freedom. The divisor used in calculations is N - ddof,
where N represents the number of elements.

numeric_onlybool, default FalseInclude only float, int, boolean columns. Not implemented for Series.



Returns:

scalar or Series (if level specified)



Examples
>>> s = pd.Series([1, 2, 3])
>>> s.sem().round(6)
0.57735


With a DataFrame
>>> df = pd.DataFrame({'a': [1, 2], 'b': [2, 3]}, index=['tiger', 'zebra'])
>>> df
       a   b
tiger  1   2
zebra  2   3
>>> df.sem()
a   0.5
b   0.5
dtype: float64


Using axis=1
>>> df.sem(axis=1)
tiger   0.5
zebra   0.5
dtype: float64


In this case, numeric_only should be set to True
to avoid getting an error.
>>> df = pd.DataFrame({'a': [1, 2], 'b': ['T', 'Z']},
...                   index=['tiger', 'zebra'])
>>> df.sem(numeric_only=True)
a   0.5
dtype: float64




