

pandas.Series.compare#


Series.compare(other, align_axis=1, keep_shape=False, keep_equal=False, result_names=('self', 'other'))[source]#
Compare to another Series and show the differences.

Parameters:

otherSeriesObject to compare with.

align_axis{0 or âindexâ, 1 or âcolumnsâ}, default 1Determine which axis to align the comparison on.


0, or âindexâResulting differences are stacked verticallywith rows drawn alternately from self and other.




1, or âcolumnsâResulting differences are aligned horizontallywith columns drawn alternately from self and other.





keep_shapebool, default FalseIf true, all rows and columns are kept.
Otherwise, only the ones with different values are kept.

keep_equalbool, default FalseIf true, the result keeps values that are equal.
Otherwise, equal values are shown as NaNs.

result_namestuple, default (âselfâ, âotherâ)Set the dataframes names in the comparison.

New in version 1.5.0.




Returns:

Series or DataFrameIf axis is 0 or âindexâ the result will be a Series.
The resulting index will be a MultiIndex with âselfâ and âotherâ
stacked alternately at the inner level.
If axis is 1 or âcolumnsâ the result will be a DataFrame.
It will have two columns namely âselfâ and âotherâ.





See also

DataFrame.compareCompare with another DataFrame and show differences.



Notes
Matching NaNs will not appear as a difference.
Examples
>>> s1 = pd.Series(["a", "b", "c", "d", "e"])
>>> s2 = pd.Series(["a", "a", "c", "b", "e"])


Align the differences on columns
>>> s1.compare(s2)
  self other
1    b     a
3    d     b


Stack the differences on indices
>>> s1.compare(s2, align_axis=0)
1  self     b
   other    a
3  self     d
   other    b
dtype: object


Keep all original rows
>>> s1.compare(s2, keep_shape=True)
  self other
0  NaN   NaN
1    b     a
2  NaN   NaN
3    d     b
4  NaN   NaN


Keep all original rows and also all original values
>>> s1.compare(s2, keep_shape=True, keep_equal=True)
  self other
0    a     a
1    b     a
2    c     c
3    d     b
4    e     e




