

pandas.DataFrame.dropna#


DataFrame.dropna(*, axis=0, how=_NoDefault.no_default, thresh=_NoDefault.no_default, subset=None, inplace=False, ignore_index=False)[source]#
Remove missing values.
See the User Guide for more on which values are
considered missing, and how to work with missing data.

Parameters:

axis{0 or âindexâ, 1 or âcolumnsâ}, default 0Determine if rows or columns which contain missing values are
removed.

0, or âindexâ : Drop rows which contain missing values.
1, or âcolumnsâ : Drop columns which contain missing value.

Only a single axis is allowed.

how{âanyâ, âallâ}, default âanyâDetermine if row or column is removed from DataFrame, when we have
at least one NA or all NA.

âanyâ : If any NA values are present, drop that row or column.
âallâ : If all values are NA, drop that row or column.


threshint, optionalRequire that many non-NA values. Cannot be combined with how.

subsetcolumn label or sequence of labels, optionalLabels along other axis to consider, e.g. if you are dropping rows
these would be a list of columns to include.

inplacebool, default FalseWhether to modify the DataFrame rather than creating a new one.

ignore_indexbool, default FalseIf True, the resulting axis will be labeled 0, 1, â¦, n - 1.

New in version 2.0.0.




Returns:

DataFrame or NoneDataFrame with NA entries dropped from it or None if inplace=True.





See also

DataFrame.isnaIndicate missing values.

DataFrame.notnaIndicate existing (non-missing) values.

DataFrame.fillnaReplace missing values.

Series.dropnaDrop missing values.

Index.dropnaDrop missing indices.



Examples
>>> df = pd.DataFrame({"name": ['Alfred', 'Batman', 'Catwoman'],
...                    "toy": [np.nan, 'Batmobile', 'Bullwhip'],
...                    "born": [pd.NaT, pd.Timestamp("1940-04-25"),
...                             pd.NaT]})
>>> df
       name        toy       born
0    Alfred        NaN        NaT
1    Batman  Batmobile 1940-04-25
2  Catwoman   Bullwhip        NaT


Drop the rows where at least one element is missing.
>>> df.dropna()
     name        toy       born
1  Batman  Batmobile 1940-04-25


Drop the columns where at least one element is missing.
>>> df.dropna(axis='columns')
       name
0    Alfred
1    Batman
2  Catwoman


Drop the rows where all elements are missing.
>>> df.dropna(how='all')
       name        toy       born
0    Alfred        NaN        NaT
1    Batman  Batmobile 1940-04-25
2  Catwoman   Bullwhip        NaT


Keep only the rows with at least 2 non-NA values.
>>> df.dropna(thresh=2)
       name        toy       born
1    Batman  Batmobile 1940-04-25
2  Catwoman   Bullwhip        NaT


Define in which columns to look for missing values.
>>> df.dropna(subset=['name', 'toy'])
       name        toy       born
1    Batman  Batmobile 1940-04-25
2  Catwoman   Bullwhip        NaT




