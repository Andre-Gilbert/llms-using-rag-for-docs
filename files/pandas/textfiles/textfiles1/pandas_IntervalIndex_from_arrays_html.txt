

pandas.IntervalIndex.from_arrays#


classmethod IntervalIndex.from_arrays(left, right, closed='right', name=None, copy=False, dtype=None)[source]#
Construct from two arrays defining the left and right bounds.

Parameters:

leftarray-like (1-dimensional)Left bounds for each interval.

rightarray-like (1-dimensional)Right bounds for each interval.

closed{âleftâ, ârightâ, âbothâ, âneitherâ}, default ârightâWhether the intervals are closed on the left-side, right-side, both
or neither.

namestr, optionalName of the resulting IntervalIndex.

copybool, default FalseCopy the data.

dtypedtype, optionalIf None, dtype will be inferred.



Returns:

IntervalIndex


Raises:

ValueErrorWhen a value is missing in only one of left or right.
When a value in left is greater than the corresponding value
in right.





See also

interval_rangeFunction to create a fixed frequency IntervalIndex.

IntervalIndex.from_breaksConstruct an IntervalIndex from an array of splits.

IntervalIndex.from_tuplesConstruct an IntervalIndex from an array-like of tuples.



Notes
Each element of left must be less than or equal to the right
element at the same position. If an element is missing, it must be
missing in both left and right. A TypeError is raised when
using an unsupported type for left or right. At the moment,
âcategoryâ, âobjectâ, and âstringâ subtypes are not supported.
Examples
>>> pd.IntervalIndex.from_arrays([0, 1, 2], [1, 2, 3])
IntervalIndex([(0, 1], (1, 2], (2, 3]],
              dtype='interval[int64, right]')




