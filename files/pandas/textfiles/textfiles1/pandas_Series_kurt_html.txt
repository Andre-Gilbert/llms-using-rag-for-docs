

pandas.Series.kurt#


Series.kurt(axis=0, skipna=True, numeric_only=False, **kwargs)[source]#
Return unbiased kurtosis over requested axis.
Kurtosis obtained using Fisherâs definition of
kurtosis (kurtosis of normal == 0.0). Normalized by N-1.

Parameters:

axis{index (0)}Axis for the function to be applied on.
For Series this parameter is unused and defaults to 0.
For DataFrames, specifying axis=None will apply the aggregation
across both axes.

New in version 2.0.0.


skipnabool, default TrueExclude NA/null values when computing the result.

numeric_onlybool, default FalseInclude only float, int, boolean columns. Not implemented for Series.

**kwargsAdditional keyword arguments to be passed to the function.



Returns:

scalar or scalar



Examples
>>> s = pd.Series([1, 2, 2, 3], index=['cat', 'dog', 'dog', 'mouse'])
>>> s
cat    1
dog    2
dog    2
mouse  3
dtype: int64
>>> s.kurt()
1.5


With a DataFrame
>>> df = pd.DataFrame({'a': [1, 2, 2, 3], 'b': [3, 4, 4, 4]},
...                   index=['cat', 'dog', 'dog', 'mouse'])
>>> df
       a   b
  cat  1   3
  dog  2   4
  dog  2   4
mouse  3   4
>>> df.kurt()
a   1.5
b   4.0
dtype: float64


With axis=None
>>> df.kurt(axis=None).round(6)
-0.988693


Using axis=1
>>> df = pd.DataFrame({'a': [1, 2], 'b': [3, 4], 'c': [3, 4], 'd': [1, 2]},
...                   index=['cat', 'dog'])
>>> df.kurt(axis=1)
cat   -6.0
dog   -6.0
dtype: float64




