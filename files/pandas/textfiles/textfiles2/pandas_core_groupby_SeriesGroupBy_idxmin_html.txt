

pandas.core.groupby.SeriesGroupBy.idxmin#


SeriesGroupBy.idxmin(axis=_NoDefault.no_default, skipna=True)[source]#
Return the row label of the minimum value.
If multiple values equal the minimum, the first row label with that
value is returned.

Parameters:

axis{0 or âindexâ}Unused. Parameter needed for compatibility with DataFrame.

skipnabool, default TrueExclude NA/null values. If the entire Series is NA, the result
will be NA.

*args, **kwargsAdditional arguments and keywords have no effect but might be
accepted for compatibility with NumPy.



Returns:

IndexLabel of the minimum value.



Raises:

ValueErrorIf the Series is empty.





See also

numpy.argminReturn indices of the minimum values along the given axis.

DataFrame.idxminReturn index of first occurrence of minimum over requested axis.

Series.idxmaxReturn index label of the first occurrence of maximum of values.



Notes
This method is the Series version of ndarray.argmin. This method
returns the label of the minimum, while ndarray.argmin returns
the position. To get the position, use series.values.argmin().
Examples
>>> s = pd.Series(data=[1, None, 4, 1],
...               index=['A', 'B', 'C', 'D'])
>>> s
A    1.0
B    NaN
C    4.0
D    1.0
dtype: float64


>>> s.idxmin()
'A'


If skipna is False and there is an NA value in the data,
the function returns nan.
>>> s.idxmin(skipna=False)
nan




