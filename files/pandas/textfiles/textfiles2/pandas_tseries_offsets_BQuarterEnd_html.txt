

pandas.tseries.offsets.BQuarterEnd#


class pandas.tseries.offsets.BQuarterEnd#
DateOffset increments between the last business day of each Quarter.
startingMonth = 1 corresponds to dates like 1/31/2007, 4/30/2007, â¦
startingMonth = 2 corresponds to dates like 2/28/2007, 5/31/2007, â¦
startingMonth = 3 corresponds to dates like 3/30/2007, 6/29/2007, â¦

Parameters:

nint, default 1The number of quarters represented.

normalizebool, default FalseNormalize start/end dates to midnight before generating date range.

startingMonthint, default 3A specific integer for the month of the year from which we start quarters.





See also

DateOffsetStandard kind of date increment.



Examples
>>> from pandas.tseries.offsets import BQuarterEnd
>>> ts = pd.Timestamp('2020-05-24 05:01:15')
>>> ts + BQuarterEnd()
Timestamp('2020-06-30 05:01:15')
>>> ts + BQuarterEnd(2)
Timestamp('2020-09-30 05:01:15')
>>> ts + BQuarterEnd(1, startingMonth=2)
Timestamp('2020-05-29 05:01:15')
>>> ts + BQuarterEnd(startingMonth=2)
Timestamp('2020-05-29 05:01:15')


Attributes


base
Returns a copy of the calling offset object with n=1 and all other attributes equal.

freqstr
Return a string representing the frequency.

kwds
Return a dict of extra parameters for the offset.

name
Return a string representing the base frequency.





n


nanos


normalize


rule_code


startingMonth




Methods


copy
Return a copy of the frequency.

is_anchored
Return boolean whether the frequency is a unit frequency (n=1).

is_month_end
Return boolean whether a timestamp occurs on the month end.

is_month_start
Return boolean whether a timestamp occurs on the month start.

is_on_offset
Return boolean whether a timestamp intersects with this frequency.

is_quarter_end
Return boolean whether a timestamp occurs on the quarter end.

is_quarter_start
Return boolean whether a timestamp occurs on the quarter start.

is_year_end
Return boolean whether a timestamp occurs on the year end.

is_year_start
Return boolean whether a timestamp occurs on the year start.

rollback
Roll provided date backward to next offset only if not on offset.

rollforward
Roll provided date forward to next offset only if not on offset.





